// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningPoker.Website.Data;

namespace PlanningPoker.Website.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlanningPoker.Core.Entities.Card", b =>
                {
                    b.Property<byte[]>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("text");

                    b.Property<string>("CardSource")
                        .HasColumnType("text");

                    b.Property<int>("DeveloperSize")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperVotes")
                        .HasColumnType("int");

                    b.Property<byte[]>("GameId")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("StorySize")
                        .HasColumnType("int");

                    b.Property<int>("TestingSize")
                        .HasColumnType("int");

                    b.Property<int>("TestingVotes")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("GameId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("PlanningPoker.Core.Entities.Game", b =>
                {
                    b.Property<byte[]>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("GameMasterPlayerId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("GameName")
                        .HasColumnType("text");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("datetime");

                    b.HasKey("GameId");

                    b.HasIndex("GameMasterPlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PlanningPoker.Core.Entities.Player", b =>
                {
                    b.Property<byte[]>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("GameId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("PlayerName")
                        .HasColumnType("text");

                    b.Property<int>("PlayerType")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PlanningPoker.Core.Entities.Card", b =>
                {
                    b.HasOne("PlanningPoker.Core.Entities.Game", null)
                        .WithMany("Cards")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("PlanningPoker.Core.Entities.Game", b =>
                {
                    b.HasOne("PlanningPoker.Core.Entities.Player", "GameMaster")
                        .WithMany()
                        .HasForeignKey("GameMasterPlayerId");
                });

            modelBuilder.Entity("PlanningPoker.Core.Entities.Player", b =>
                {
                    b.HasOne("PlanningPoker.Core.Entities.Game", null)
                        .WithMany("Players")
                        .HasForeignKey("GameId");
                });
#pragma warning restore 612, 618
        }
    }
}
